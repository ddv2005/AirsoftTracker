; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = tbeam-v101 ; Note: the github actions CI test build can't yet build NRF52 targets

[env]
build_unflags = -O2
build_flags = -Wno-missing-field-initializers -Isrc -Ofast
monitor_speed = 115200
extra_scripts = 
   pre:platformio_version_increment/version_increment_pre.py
   post:platformio_version_increment/version_increment_post.py
lib_extra_dirs =  
  ./libs
lib_deps =
  1260 ; OneButton library for non-blocking button debounce
  Wire
  FS
  SPI
  ArduinoJson
  CayenneLPP
;  https://github.com/meshtastic/SparkFun_Ublox_Arduino_Library.git
  https://github.com/meshtastic/RadioLib.git#8657380241bce681c33aab46598bbf13b11f876c
  https://github.com/lvgl/lv_port_esp32.git
  adafruit/Adafruit MCP23017 Arduino Library


[esp32_base]
monitor_filters = esp32_exception_decoder
board_build.partitions = partition-table.csv
framework = arduino
board_build.filesystem = spiffs
src_filter = 
  ${env.src_filter}
upload_speed = 921600
build_flags =  ${env.build_flags} -Wall -Wextra -mfix-esp32-psram-cache-issue -Wno-format-truncation -DLV_LVGL_H_INCLUDE_SIMPLE -DRADIOLIB_GODMODE -DARDUINOJSON_USE_DOUBLE=1 -Wwrite-strings
# -flto -Wl,-flto

platform = espressif32
#platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
#platform_packages = 
#  framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.0
#  toolchain-xtensa-esp32  @ 8.4.0+2021r1

[tbeam]
monitor_filters = esp32_exception_decoder
extends = esp32_base
board = ttgo-t-beam
lib_deps =
  ${env.lib_deps}

[env:tbeam-v100]
extends = tbeam
build_flags = ${esp32_base.build_flags} -D AD_V100

[env:tbeam-v101]
extends = tbeam
build_flags = ${esp32_base.build_flags} -D AD_V101


[env:tbeam-v101-noscreen]
extends = tbeam
build_flags = ${esp32_base.build_flags} -D AD_V101 -D AD_NOSCREEN

[env:lora32-noscreen]
extends = esp32_base
board = ttgo-lora32-v1
build_flags = ${esp32_base.build_flags} -D AD_LORA32_V1 -D AD_NOSCREEN
